name: Spring Boot CI/CD

on:
  push:
    branches: [ main, dev ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
        
    - name: Build with Gradle
      run: ./gradlew build -x test

    - name: Login to DockerHub
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and Push Docker Image
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
      env:
        DOCKER_REPOSITORY: ${{ secrets.DOCKER_USERNAME }}/spring-boot-app
      run: |
        docker build -t $DOCKER_REPOSITORY:${{ github.sha }} .
        docker push $DOCKER_REPOSITORY:${{ github.sha }}
        
  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/spring-boot-app:${{ github.sha }}
          docker stop spring-app || true
          docker rm spring-app || true
          docker run -d --name spring-app -p 8080:8080 \
            -e SPRING_PROFILES_ACTIVE=dev \
            -e RDS_ENDPOINT=${{ secrets.RDS_ENDPOINT }} \
            -e DB_NAME=${{ secrets.DB_NAME }} \
            -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY_ID }} \
            -e AWS_SECRET_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            -e AWS_REGION=${{ secrets.AWS_REGION }} \
            -e S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }} \
            -e CLOUD_AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY_ID }} \
            -e CLOUD_AWS_SECRET_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            ${{ secrets.DOCKER_USERNAME }}/spring-boot-app:${{ github.sha }}
